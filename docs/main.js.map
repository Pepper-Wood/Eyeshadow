{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/palette/palette.component.ts","./src/app/palette/palette.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PaletteComponent } from './palette/palette.component';\n\nconst routes: Routes = [\n  { path: 'palette/:slug', component: PaletteComponent },\n  { path: 'palette/:slug/:im', component: PaletteComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport palettes from '../assets/palettes.json';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'eyeshadow';\n  palettes: any = palettes;\n}\n","<nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n  <div class=\"container\">\n    <div class=\"navbar-brand\">\n      <a class=\"navbar-item\" [routerLink]=\"['/']\" class=\"logo\"><span id=\"logo\"></span>eyeshadow</a>\n\n      <a role=\"button\" class=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n      </a>\n    </div>\n\n    <div id=\"navbarBasicExample\" class=\"navbar-menu\">\n      <div class=\"navbar-start\">\n        <div class=\"navbar-item has-dropdown is-hoverable\">\n          <a class=\"navbar-link\">Palettes</a>\n          <div class=\"navbar-dropdown\">\n            <a *ngFor=\"let palette of palettes | keyvalue\" class=\"navbar-item\" routerLink=\"palette/{{ palette.key }}\">\n              {{palette.value.company}}: {{palette.value.name}}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n\n<footer class=\"footer\">\n  <div class=\"content has-text-centered\">\n    <p>\n      <strong>eyeshadow</strong> by <a href=\"https://kathryndipippo.com\">Kathryn DiPippo</a>. View source code on <a href=\"https://github.com/Pepper-Wood/eyeshadow\">GitHub</a>.\n    </p>\n    <p>\n      Icon made by <a href=\"https://www.flaticon.com/authors/iconixar\" title=\"iconixar\">iconixar</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>.\n    </p>\n  </div>\n</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PaletteComponent } from './palette/palette.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PaletteComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport palettes from '../../assets/palettes.json';\nimport Color from 'color';\nimport * as DeltaE from 'delta-e';\n\n@Component({\n  selector: 'app-palette',\n  templateUrl: './palette.component.html',\n  styleUrls: ['./palette.component.css']\n})\nexport class PaletteComponent implements OnInit {\n  slug: string;\n  im: number;\n  error: any;\n\n  palettes: any = palettes;\n  palette: any;\n  sorted: any;\n  reduced: any;\n  reduced_remainder_count: number;\n  range_value: number = 6;\n\n  constructor(\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.slug = params.get('slug');\n      this.im = +params.get('im') || 0;\n      if (!this.palettes.hasOwnProperty(this.slug)) {\n        this.error = \"error: slug not found\";\n      } else {\n        this.palette = this.palettes[this.slug];\n        let color_objects = this.convert_hex_codes_to_colors(this.palette.colors[this.im].hex_codes);\n        this.sorted = this.get_sorted_hex_codes(color_objects);\n\n        this.reduced = this.get_reduced_palette(color_objects, this.range_value);\n        this.reduced_remainder_count = this.palette.colors[this.im].hex_codes.length - this.reduced.length;\n      }\n    });\n  }\n\n  parseBody(body: string) {\n    return body.replace(/(http.*?\\s)/, \"<a target='_blank' href=\\\"$1\\\">$1</a>\")\n  }\n\n  hue_compare(color_a, color_b) {\n    if (color_a.hsl().array()[0] < color_b.hsl().array()[0]) return 1;\n    return -1;\n  }\n  saturation_compare(color_a: Color, color_b: Color) {\n    if (color_a.hsl().array()[1] < color_b.hsl().array()[1]) return 1;\n    return -1;\n  }\n  lightness_compare(color_a, color_b) {\n    if (color_a.hsl().array()[2] < color_b.hsl().array()[2]) return 1;\n    return -1;\n  }\n\n  convert_hex_codes_to_colors(hex_codes) {\n    let colors = [];\n    for (let i = 0; i < hex_codes.length; i++) {\n        colors.push(new Color(hex_codes[i]));\n    }\n    return colors;\n  }\n\n  convert_colors_to_hex_codes(colors) {\n    let hex_codes = [];\n    for (let i = 0; i < colors.length; i++) {\n        hex_codes.push(colors[i].hex());\n    }\n    return hex_codes;\n  }\n\n  get_sorted_hex_codes(color_objects) {\n    return {\n      \"original\": this.convert_colors_to_hex_codes(Array.prototype.slice.call(color_objects)),\n      \"hue\": this.convert_colors_to_hex_codes(Array.prototype.slice.call(color_objects).sort(this.hue_compare)),\n      \"saturation\": this.convert_colors_to_hex_codes(Array.prototype.slice.call(color_objects).sort(this.saturation_compare)),\n      \"lightness\": this.convert_colors_to_hex_codes(Array.prototype.slice.call(color_objects).sort(this.lightness_compare)),\n    };\n  }\n\n  get_score_from_delta(delta, threshold) {\n    // Ranges adjusted based on makeup perception.\n    switch (true) {\n      case (delta <= 1):\n        return 1000;\n      case (delta <= threshold):\n        return 1;\n      default:\n        return 0;\n    }\n  }\n\n  get_reduced_palette(color_objects, threshold) {\n    while (true) {\n      let scores = Array(color_objects.length).fill(0);\n      for (let a = 0; a < color_objects.length; a++) {\n        for (let b = 0; b < color_objects.length; b++) {\n          if (a == b) {\n            continue;\n          }\n          var color1 = {\n            L: color_objects[a].l(),\n            A: color_objects[a].a(),\n            B: color_objects[a].b()\n          };\n          var color2 = {\n            L: color_objects[b].l(),\n            A: color_objects[b].a(),\n            B: color_objects[b].b()\n          };\n\n          // 2000 formula\n          let delta = DeltaE.getDeltaE00(color1, color2);\n          scores[a] += this.get_score_from_delta(delta, threshold);\n        }\n      }\n      let max = Math.max( ...scores );\n      if (max == 0) {\n        return this.convert_colors_to_hex_codes(color_objects);\n      }\n      var maxIndex = scores.reduce(function(highestIndex, element, index, array){\n        return element > array[highestIndex] ? index : highestIndex;\n      }, 0);\n      color_objects.splice(maxIndex, 1);\n    }\n  }\n\n  update_reduced(range_value) {\n    this.range_value = range_value\n    let color_objects = this.convert_hex_codes_to_colors(this.palette.colors[this.im].hex_codes);\n    this.reduced = this.get_reduced_palette(color_objects, this.range_value);\n    this.reduced_remainder_count = this.palette.colors[this.im].hex_codes.length - this.reduced.length;\n  }\n\n}\n","<section *ngIf=\"error; else slugFound\" class=\"section\">\n  <div class=\"container\">\n    <h1 class=\"title\">404 Not Found</h1>\n    <h2 class=\"subtitle\">Palette for '{{ slug }}' not found.</h2>\n  </div>\n</section>\n\n<ng-template #slugFound>\n  <section class=\"hero is-medium\" [style.backgroundImage]=\"'url(' + palette.colors[im].image + ')'\">\n    <div class=\"hero-body\">\n      <div class=\"container has-text-centered\">\n        <h1 class=\"title\">{{ palette.name }}</h1>\n        <h2 class=\"subtitle\">{{ palette.company }}</h2>\n      </div>\n    </div>\n    <div class=\"hero-foot\">\n      <nav class=\"tabs\">\n        <div class=\"container\">\n          <ul>\n            <li *ngFor=\"let color_option of palette.colors; index as i\" [ngClass]=\"{'is-active' : im == i}\"><a [routerLink]=\"['/palette/' + slug + '/' + i]\">{{ color_option.name }}</a></li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  </section>\n  <div class=\"container\" [style.marginTop.rem]=\"2\" [style.marginBottom.rem]=\"2\">\n    <section>\n      <div class=\"columns\">\n        <div class=\"column\">\n          <div class=\"card\">\n            <div class=\"card-content\">\n              <div class=\"palette\">\n                <div *ngFor=\"let hex_code of sorted.original\" class='shade shade-col{{ palette.colors[im].columns }}' [style.background-color]=\"hex_code\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"column is-two-thirds\">\n          <p [innerHTML]=\"parseBody(palette.description)\"></p>\n          <p [innerHTML]=\"parseBody(palette.colors[im].description)\"></p>\n        </div>\n      </div>\n      <p>We can analyze the colors of the palette colorpicked from this image and draw conclusions on its palette composition.</p>\n    </section>\n    <hr class=\"hr\">\n    <section>\n      <h1 class=\"title\">Sorted</h1>\n      <p>Colors in makeup palettes can be organized based on three attributes. Colors are converted from RGB/hex format into HSL and sorted based on that property.</p>\n      <div class=\"columns\">\n        <div class=\"column\">\n          <div class=\"card-content\">\n            <p class=\"subtitle is-4\">Hue</p>\n            <div class=\"content\">\n              <div class=\"palette\">\n                <div *ngFor=\"let hex_code of sorted.hue\" class='shade shade-col{{ palette.colors[im].columns }}' [style.background-color]=\"hex_code\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"column\">\n          <div class=\"card-content\">\n            <p class=\"subtitle is-4\">Saturation</p>\n            <div class=\"content\">\n              <div class=\"palette\">\n                <div *ngFor=\"let hex_code of sorted.saturation\" class='shade shade-col{{ palette.colors[im].columns }}' [style.background-color]=\"hex_code\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"column\">\n          <div class=\"card-content\">\n            <p class=\"subtitle is-4\">Lightness</p>\n            <div class=\"content\">\n              <div class=\"palette\">\n                <div *ngFor=\"let hex_code of sorted.lightness\" class='shade shade-col{{ palette.colors[im].columns }}' [style.background-color]=\"hex_code\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <hr class=\"hr\">\n    <section>\n      <h1 class=\"title\">Reduced</h1>\n      <div class=\"columns\">\n        <div class=\"column\">\n          <div class=\"card\">\n            <div class=\"card-content\">\n              <div class=\"palette\">\n                <div *ngFor=\"let hex_code of reduced\" class='shade shade-col{{ palette.colors[im].columns }}' [style.background-color]=\"hex_code\"></div>\n                <div *ngFor=\"let item of [].constructor(reduced_remainder_count)\" class='shade shade-col{{ palette.colors[im].columns }}'></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"column is-two-thirds\">\n          Threshold: {{ range_value }}\n          <div class=\"range\">\n            <input class=\"range__input\" step=\"0.1\" min=\"1\" max=\"20\" [value]=\"range_value\" type=\"range\" #ref (change)=\"update_reduced(ref.value)\" list=\"number\">\n            <datalist class=\"range__list\" id=\"number\">\n              <option *ngFor=\"let item of [].constructor(20); index as i\" class=\"range__opt\">{{ i + 1 }}</option>\n            </datalist>\n          </div>\n          <p>Delta E is a metric for understanding how the human eye perceives color difference <a href=\"http://zschuessler.github.io/DeltaE/\">(source)</a>. Two colors can be converted to the LAB format and then applied to Delta E algorithms to put a number to how similar or different they are. For these calculations, the CIEDE2000 Color-Difference Formula is utilized.</p>\n          <p>For the typical Delta E value range, a result <= 1 indicates the difference between two colors are not perceptible by human eyes. Delta E <= 2 indicates that difference is perceptible through close observation. Through my own testing, I find that Delta E <= 6 is more accurate when comparing makeup pigments.</p>\n          <p>Reductions are based on remove colors whose Delta Es with other colors are less than the provided threshold. You can adjust the slider above to reduce or increase the range for detecting colors that are perceptible through close observation.</p>\n          <p>Thanks goes to <a href=\"https://github.com/zschuessler\">Zachary Schuessler</a> for implementing and documenting the DeltaE library.</p>\n        </div>\n      </div>\n    </section>\n  </div>\n</ng-template>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}